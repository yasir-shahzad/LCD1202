#include "lcd1202.h"


LCD1202 lcd(8, 7, 6, 5);  // RST, cs, MOSI, SCK

static const char image_jeka[768] PROGMEM =
{ 0x00, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
  0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8F, 0x0F,
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F,
  0xCF, 0xCF, 0xCF, 0xCF, 0x8F, 0x8F, 0x8F, 0x8F, 0x0F, 0x0F, 0x0F, 0x0F,
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x5F, 0x3F, 0x3F, 0xEF, 0xFF, 0xDF, 0x9F, 0x9F, 0xFF, 0xEF, 0xFF,
  0xFF, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x38,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFF, 0xFF, 0xFF, 0xFB, 0x39, 0x39, 0x39, 0x38, 0x30, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x78, 0xF9, 0xF9, 0xF9,
  0xF0, 0xF7, 0xEF, 0xEF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xC0, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,
  0xFE, 0xFC, 0xC0, 0x84, 0x0E, 0x0E, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
  0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x0E,
  0x80, 0xC0, 0xC0, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xF9, 0xF9,
  0xFB, 0xF7, 0xFF, 0xFF, 0xEF, 0x5F, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8E, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x8E, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x65, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
  0x1F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE,
  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x47, 0xC7, 0xC7, 0xC7, 0xC7, 0xC3,
  0x43, 0xC1, 0xC1, 0x41, 0x40, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x04, 0x04, 0xFE, 0x00, 0x00, 0xFC, 0x12, 0x11, 0x11,
  0x11, 0x12, 0x1C, 0x00, 0x00, 0xFF, 0x10, 0x10, 0x28, 0x44, 0x82, 0x00,
  0x00, 0x00, 0xC2, 0x22, 0x22, 0x22, 0x24, 0xF8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0xFE, 0x08, 0x08, 0x00, 0x00,
  0x00, 0xFE, 0x04, 0x04, 0x04, 0xF8, 0x04, 0x04, 0x04, 0xF8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x08,
  0x10, 0x10, 0x10, 0x10, 0x08, 0x07, 0x00, 0x00, 0x01, 0x02, 0x04, 0x04,
  0x04, 0x02, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0x00, 0x00, 0x03, 0x04, 0x04, 0x04, 0x04, 0x07, 0x00, 0x00, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x03, 0x04, 0x04, 0x04, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const char image_gres[768] PROGMEM =
{ 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0x7D, 0x5D, 0x9B,
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xED, 0xED, 0x13, 0xFF, 0xFF, 0xFF, 0xFF,
  0x01, 0x6D, 0x6D, 0x7D, 0xFF, 0xFF, 0xFF, 0xFF, 0xB3, 0x6D, 0x6D, 0x9B,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01,
  0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
  0x03, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF,
  0xCF, 0x8F, 0x8F, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x08,
  0x3C, 0x3C, 0xFC, 0xFC, 0x0E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xBC, 0xBC, 0xFC, 0xFC, 0x7C, 0x7C, 0x0C, 0x0C, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x0C, 0x0C, 0x08, 0x08, 0x30, 0x30, 0x40, 0x40, 0x81,
  0x81, 0x01, 0x01, 0x0F, 0x0F, 0x4F, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x87,
  0x87, 0x03, 0x03, 0x03, 0x03, 0x0F, 0x0F, 0x8C, 0x8C, 0xE4, 0xE4, 0xE4,
  0xFC, 0xFC, 0xFF, 0xFF, 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0x1C, 0x1C,
  0x1F, 0x1F, 0xFF, 0xFF, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xE0, 0x80, 0x80,
  0x07, 0x07, 0x07, 0x00, 0x00, 0x80, 0x80, 0xE0, 0xE0, 0x78, 0x78, 0x1C,
  0x1C, 0x84, 0x84, 0xE3, 0xE3, 0xE0, 0xE0, 0x03, 0x03, 0x7F, 0x7F, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0x1F, 0x1F, 0xCF, 0xCF, 0xEF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x07, 0x07, 0x3F, 0x3F, 0xFF, 0xFF, 0xEF, 0xEF, 0xDF, 0xDF, 0x3F,
  0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x08, 0x08,
  0x00, 0x00, 0x01, 0x01, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F,
  0x0F, 0xCF, 0xCF, 0xC7, 0xC7, 0xE1, 0xE1, 0x30, 0x30, 0x38, 0x38, 0xDF,
  0xDF, 0x17, 0x17, 0xF0, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0x08, 0x08, 0xCF,
  0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFE, 0xFE, 0xFE, 0xFE, 0xF3, 0xF3, 0x1D, 0x1D, 0x03, 0x03, 0xE2,
  0xE2, 0x1F, 0x1F, 0x1D, 0x1D, 0x3D, 0x3D, 0x33, 0x33, 0x33, 0x33, 0xE3,
  0xE3, 0xE3, 0xA1, 0xA1, 0x01, 0x01, 0x10, 0x10, 0x20, 0x20, 0xE0, 0xE0,
  0xE0, 0xE0, 0x10, 0x10, 0x10, 0x10, 0xFC, 0xFC, 0xFC, 0xFC, 0xFE, 0xFE,
  0x0F, 0x83, 0x83, 0x7F, 0x7F, 0x01, 0x01, 0x00, 0x00, 0x8E, 0x8E, 0xFF,
  0xFF, 0x70, 0x70, 0x3F, 0x3F, 0xC3, 0xC3, 0xF0, 0xF0, 0xFE, 0xFE, 0xFD,
  0xF1, 0xF1, 0xFC, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFE, 0xF9,
  0xF9, 0xC0, 0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xF8, 0xF8, 0x8E, 0x8E, 0x03,
  0x01, 0x01, 0x0F, 0x0F, 0xF0, 0xF0, 0xFC, 0xFC, 0x00, 0x00, 0x01, 0x01,
  0x03, 0x03, 0x0C, 0x0C, 0xF8, 0xF8, 0xFF, 0xFF, 0xC3, 0xC3, 0xC1, 0xC1,
  0x00, 0x37, 0x37, 0x3C, 0x3C, 0x8C, 0x8C, 0xC6, 0xC6, 0xF3, 0xF3, 0xF9,
  0xF9, 0xFC, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7,
  0xFF, 0xFF, 0xFC, 0xFC, 0xEF, 0xEF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE4, 0xE4,
  0xE7, 0xE7, 0xF3, 0xF3, 0xF3, 0xF3, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8,
  0xFC, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

void setup() {

lcd.initialize();  //Инициализация дисплея
lcd.clearScreen();  //Очистка дисплея

}

void loop() {
lcd.print(1, 1, 1,  "     Привет!    ");
lcd.print(1, 10, 1, "  Пример работы ");
lcd.print(1, 20, 1, "с драйвером v1.5");
lcd.print(1, 30, 1, "     дисплея    ");
lcd.print(1, 40, 1, "   Nokia 1202  ");
lcd.print(1, 50, 1, " с контроллером ");
lcd.print(1, 60, 1, "    STE2007      ");
lcd.display();
delay(10000);
lcd.clearScreen();
lcd.print(1, 1, 1,  "Вопросы на форум");
lcd.print(1, 10, 1, "arduino.ru/forum");
lcd.print(1, 20, 1, " Автор шрифтов  ");
lcd.print(1, 30, 1, " и всех функций ");
lcd.print(1, 40, 1, "     Jeka_tm    ");
lcd.print(1, 50, 1, "Драйвер и пример");
lcd.print(1, 60, 1, "  создал Gres  ");
lcd.display();
delay(10000);
lcd.clearScreen();


lcd.print_1607(0, 0, 1, "Проверка!");  //Печатаем строку "Проверка!" начиная с нулевого знакоместа, в нулевой строке
lcd.print_1607(1, 6, 1, "Готово!!!");  //Печатаем строку "Готово!!!" начиная с первого знакоместа, в шестой, последней строке




for (int i=0; i<=4; i++) //Поморгаем пикселем по координатам в цикле
{
lcd.writePixel(10, 10, 1); //Включаем пиксель по координатам x и y
lcd.display();             //Обновляем дисплей(выводим из буфера)
delay(100);               //Перекур
lcd.writePixel(10, 10, 0); //Включаем пиксель по координатам x и y
lcd.display();             //Обновляем дисплей(выводим из буфера)
delay(100);               //Перекур
}
lcd.clearScreen();          //Очищаем дисплей
for (int i=0; i<=50; i++) //Нарисуем линию по координатам в цикле
{
lcd.writePixel(i, i, 1);  //Включаем пиксель по координатам x и y
lcd.display();             //Обновляем дисплей(выводим из буфера)
}
delay(500);             //Перекур
lcd.clearScreen();        //Очищаем дисплей


for (int i=0; i<=2; i++) //Поморгаем всеми пикселями по в цикле
{
lcd.fillScreen(1);        //Включаем все пиксели
lcd.display();             //Обновляем дисплей(выводим из буфера)
delay(500);               //Перекур
lcd.fillScreen(0);        //Выключаем все пиксели
lcd.display();             //Обновляем дисплей(выводим из буфера)
delay(500);               //Перекур
}
lcd.clearScreen();        //Очищаем дисплей


lcd.drawChar(30, 10, 1, 'Ж'); //Выводим по координатам x, y, черным чветом, символ Ж 
lcd.display();                 //Обновляем дисплей(выводим из буфера)
delay(1000);                  //Перекур
lcd.clearScreen();              //Очищаем дисплей


lcd.print(3, 22, 1, "Здравствуй МИР!" ); //Выводим по координатам x, y, черным чветом, строку "Здравствуй МИР!" 
lcd.print(9, 36, 1, "Hello WORLD!" );    //Выводим по координатам x, y, черным чветом, строку "Здравствуй МИР!" 
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей

int t= 125;
long p= -345;
byte k= 255;

lcd.print(3, 5, 1, "Выводим циферки:" ); //Выводим по координатам x, y, черным чветом, строку "Выводим циферки:" 
lcd.print(9, 15, 1, t);						//Выводим числовое значение типа integer
lcd.print(9, 25, 1, p);						//Выводим числовое значение типа long
lcd.print(9, 35, 1, k);						//Выводим числовое значение типа byte
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.drawLine(10, 10, 45, 45, 1);  //Выводим по координатам x, y, x1, y1, черным цветом линию 
lcd.display();                     //Обновляем дисплей(выводим из буфера)
delay(1000);                      //Перекур
lcd.clearScreen();                  //Очищаем дисплей


lcd.drawFastVLine(20, 20, 30, 1);   //Выводим по координатам x, y, вертикальную линию, высотой 30 пикселей, черным цветом
lcd.display();                       //Обновляем дисплей(выводим из буфера)
delay(1000);                        //Перекур
lcd.clearScreen();                    //Очищаем дисплей


lcd.drawFastHLine(20, 20, 30, 1);   //Выводим по координатам x, y, горизонтальную линию, длиной 30 пикселей, черным цветом
lcd.display();                       //Обновляем дисплей(выводим из буфера)
delay(1000);                        //Перекур
lcd.clearScreen();                    //Очищаем дисплей


lcd.drawRect(10, 10, 40, 30, 1);    //Рисуем прямоугольник по координатам x, y, высота, ширина, цвет
lcd.display();                       //Обновляем дисплей(выводим из буфера)
delay(1000);                        //Перекур
lcd.clearScreen();                    //Очищаем дисплей


lcd.drawCircle(30, 30, 20, 1);      //Рисуем окружность с центром по координатам x, y, радиус, цвет
lcd.display();                       //Обновляем дисплей(выводим из буфера)
delay(1000);                        //Перекур
lcd.clearScreen();                    //Очищаем дисплей


lcd.drawRoundRect(10, 10, 40, 30, 10, 1);     //Рисуем скругленный прямоугольник по координатам x, y, высота, ширина, радиус скругления, цвет
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.drawTriangle(10, 55, 35, 5, 60, 55, 1);   //Рисуем треугольник по координатам вершин x, y, x1, y1, x2, y2, цвет
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.drawCircleHelper(30, 30, 20, 180, 1);      //Рисуем дугу с координат x, y, радиус, угол поворота, цвет
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.fillCircle(30, 30, 20, 1);      //Рисуем закрашенную окружность с центром по координатам x, y, радиус, цвет
lcd.display();                       //Обновляем дисплей(выводим из буфера)
delay(1000);                        //Перекур
lcd.clearScreen();                    //Очищаем дисплей


lcd.fillCircleHelper(30, 30, 20, 10, 1, 1);    //Рисуем залитую дугу с координат x, y, радиус, угол поворота, длина дуги, цвет
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.fillRect(10, 10, 40, 30, 1);    //Рисуем закрашенный прямоугольник по координатам x, y, высота, ширина, цвет
lcd.display();                       //Обновляем дисплей(выводим из буфера)
delay(1000);                        //Перекур
lcd.clearScreen();                    //Очищаем дисплей


lcd.fillRoundRect(10, 10, 40, 30, 10, 1);     //Рисуем закрашенный, скругленный прямоугольник по координатам x, y, высота, ширина, радиус скругления, цвет
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.fillTriangle(10, 55, 35, 5, 60, 55, 1);   //Рисуем заполненный треугольник по координатам вершин x, y, x1, y1, x2, y2, цвет
lcd.display();                                 //Обновляем дисплей(выводим из буфера)
delay(1000);                                  //Перекур
lcd.clearScreen();                              //Очищаем дисплей


lcd.drawBitmap(0, 0, image_jeka, 96, 64, 1);   //Выводим картинку в координаты x, y, с размером 96 на 64 пикселя, с цветом 1 (1 - пиксель включен, темный)
lcd.display();                                 //Обновляем дисплей(выводим картинку из буфера)
delay(3000);                                  //Любуемся картинкой
lcd.clearScreen();                              //Очищаем дисплей

lcd.drawBitmap(0, 0, image_gres, 96, 64, 1);   //Выводим картинку в координаты x, y, с размером 96 на 64 пикселя, с цветом 1 (1 - пиксель включен, темный)
lcd.display();                                 //Обновляем дисплей(выводим картинку из буфера)
delay(3000);                                  //Любуемся картинкой
lcd.clearScreen();                              //Очищаем дисплей


lcd.simb16x32(1, 25, 1, 8);            //Выводим в координаты x, y, цветом 1, цифру 8, размером 16х32 пикселя
lcd.simb16x32(27, 25, 1, 8);            //Выводим в координаты x, y, цветом 1, цифру 8, размером 16х32 пикселя
lcd.simb16x32(53, 25, 1, 8);            //Выводим в координаты x, y, цветом 1, цифру 8, размером 16х32 пикселя
lcd.simb16x32(79, 25, 1, 8);            //Выводим в координаты x, y, цветом 1, цифру 8, размером 16х32 пикселя
lcd.display();                             //Обновляем дисплей(выводим картинку из буфера)
delay(3000);                              //Любуемся картинкой
lcd.clearScreen();                          //Очищаем дисплей
       
for (int i=1; i<=85; )
{
lcd.simb10x16(i, 30, 1, 8);              //Выводим в координаты x, y, цветом 1, цифру 8, размером 10х16 пикселей
i=i+12;
}
lcd.display();                             //Обновляем дисплей(выводим картинку из буфера)
delay(3000);                              //Любуемся картинкой
lcd.clearScreen();                          //Очищаем дисплей
   

 
}

